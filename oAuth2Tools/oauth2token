#!/bin/bash
#
# first argument: email address
#
# using pass to get the secrets stored in a password-store
# using oauth2 cript from google-oauth2-tools
# (https://github.com/google/gmail-oauth2-tools/blob/master/python/oauth2.py) to
# connect to google and obtain the oauth2 token
#
# client-secret, client-id and refresh should be already in the password-store
# located in .local/share/mail-password-store/gmailAPI/[email address]/, you
# must do the first step from the comments in the oauth2.py script before using
# this script and use pass to store the attributes. You have to do that
# only one time. After that you can use this script to get a valid token. New
# tokens are requested if the stored token have expired.
#
# Note: the last step commented in the gmail-oauth2-tools script is not
# necesary, as far as I could see it encodes the account and the token in one
# base64 encoded string, i.e. this command recovers the token from that base64
# string:
# oauth2.py --generate_oauth2_string --user=$account \
#	--access_token=${access_token} | awk 'NR==2' | base64 -d | awk '{print $2}'
#
# Author: Alpuds with the original by Christian Tenllado

account=$1

passMail() {
    [[ $1 == 'add' ]] && PASSWORD_STORE_DIR=~/.local/share/mail-password-store pass add -e $2 || PASSWORD_STORE_DIR=~/.local/share/mail-password-store pass $1
}

get_access_token() {
	{ IFS= read -r tokenline && IFS= read -r expireline; } < \
	<(python2 ~/.local/share/oAuth2Tools/oauth2.py --user=$account \
	--client_id=$(passMail gmailAPI/$account/cID) \
	--client_secret=$(passMail gmailAPI/$account/cS) \
	--refresh_token=$(passMail gmailAPI/$account/refresh))

	token=${tokenline#Access Token: }
	expire=${expireline#Access Token Expiration Seconds: }
}

token="$(passMail gmailAPI/$account/token)"
expire="$(passMail gmailAPI/$account/token-expire)"
now=$(date +%s)

if [[ $token && $expire && $now -lt $((expire - 60)) ]]; then
	echo $token
else
	get_access_token
	echo $token | passMail add gmailAPI/$account/token
	expire=$((now + expire))
	echo $expire | passMail add gmailAPI/$account/token-expire
	echo $token
fi
